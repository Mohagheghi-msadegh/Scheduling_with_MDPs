mdp
module peocessor
    clk : [0..50] init 0;
    heat : [100..900] init 100;
    [q1] clk < 50 -> (clk' = clk + 1) & (heat' = min(heat + 1, 900));
    [q2] clk < 50 -> (clk' = clk + 1) & (heat' = min(heat + 1, 900));
    [q3] clk < 50 -> (clk' = clk + 1) & (heat' = min(heat + 1, 900));
    [q4] clk < 50 -> (clk' = clk + 1) & (heat' = min(heat + 1, 900));
    [q5] clk < 50 -> (clk' = clk + 1) & (heat' = min(heat + 1, 900));
    [h]  clk < 50 -> (clk' = clk + 1) & (heat' = max(heat - 5 , 100));

    []  s1 = 6 & clk < 50 -> (clk' = clk + 1);
    []  s1 = 6 & s2 = 3 & s3 = 6 & s4 = 5 & s5 = 6 & clk < 50 -> (clk' = clk + 1);
    []  clk = 50 -> (clk' = 50);
endmodule

module task1 
 s1 : [0..6];
 [q1] clk < 1 -> (s1' = 0);
 [q1] clk >= 1 & s1 <= 2 -> (s1' = s1 + 1);
 [q1] clk >= 1 & s1 = 3 -> .25:(s1' = s1 + 1) + .75:(s1' = 6);
 [q1] clk >= 1 & s1 = 4 -> .4:(s1' = s1 + 1) + .6:(s1' = 6);
 [q1] clk >= 1 & s1 >= 5 -> (s1' = 6);
endmodule

module task2 
 s2 : [0..3];
 [q2] clk < 5 -> (s2' = 0);
 [q2] clk >= 5 & s2 = 0 -> (s2' = 1);
 [q2] clk >= 5 & s2 = 1 -> .5:(s2' = 2) + .5:(s2' = 3);
 [q2] clk >= 5 & s2 >= 2 -> (s2' = 3);
endmodule


module task3 
 s3 : [0..6];
 [q3] clk < 2 -> (s3' = 0);
 [q3] clk >= 2 & s3 <= 3 -> (s3' = s3 + 1);
 [q3] clk >= 2 & s3 = 4 -> .5:(s3' = s3 + 1) + .5:(s3' = 6);
 [q3] clk >= 2 & s3 >= 5 -> (s3' = 6);
endmodule

module task4
 s4 : [0..5];
 [q4] clk < 12 -> (s4' = 0);
 [q4] clk >= 12 & s4 <= 2 -> (s4' = s4 + 1);
 [q4] clk >= 12 & s4 = 3 -> .8:(s4' = s4 + 1) + .2:(s4' = 5);
 [q4] clk >= 12 & s4 >= 4 -> (s4' = 5);
endmodule

module task5
 s5 : [0..6];
 [q5] clk < 15 -> (s5' = 0);
 [q5] clk >= 15 & s5 <= 2 -> (s5' = s5 + 1);
 [q5] clk >= 15 & s5 = 3 -> .8:(s5' = s5 + 1) + .2:(s5' = 5);
 [q5] clk >= 15 & s5 = 4 -> .75:(s5' = s5 + 1) + .25:(s5' = 6);
 [q5] clk >= 15 & s5 >= 5 -> (s5' = 6);
endmodule

rewards "rew"
 [q1] clk >= 1 & s1 <= 5 : .001 * heat;
 [q2] clk >= 1 & s1 <= 5 : 1 + .001 * heat;
 [q3] clk >= 1 & s1 <= 5 : 1 + .001 * heat;
 [q4] clk >= 1 & s1 <= 5 : 1 + .001 * heat;
 [q5] clk >= 1 & s1 <= 5 : 1 + .001 * heat;
 [q1] clk >= 5 & s2 <= 2 : 1 + .001 * heat;
 [q2] clk >= 5 & s2 <= 2 : .001 * heat;
 [q3] clk >= 5 & s2 <= 2 : 1 + .001 * heat;
 [q4] clk >= 5 & s2 <= 2 : 1 + .001 * heat;
 [q5] clk >= 5 & s2 <= 2 : 1 + .001 * heat;
 [q1] clk >= 2 & s3 <= 5 : 1 + .001 * heat;
 [q2] clk >= 2 & s3 <= 5 : 1 + .001 * heat;
 [q3] clk >= 2 & s3 <= 5 : .001 * heat;
 [q4] clk >= 2 & s3 <= 5 : 1 + .001 * heat;
 [q5] clk >= 2 & s3 <= 5 : 1 + .001 * heat;
 [q1] clk >= 12 & s1 <= 4 : 1 + .001 * heat;
 [q2] clk >= 12 & s1 <= 4 : 1 + .001 * heat;
 [q3] clk >= 12 & s1 <= 4 : 1 + .001 * heat;
 [q4] clk >= 12 & s1 <= 4 : .001 * heat;
 [q5] clk >= 12 & s1 <= 4 : 1 + .001 * heat;
 [q1] clk >= 15 & s1 <= 5 : 1 + .001 * heat;
 [q2] clk >= 15 & s1 <= 5 : 1 + .001 * heat;
 [q3] clk >= 15 & s1 <= 5 : 1 + .001 * heat;
 [q4] clk >= 15 & s1 <= 5 : .001 * heat;
 [q5] clk >= 15 & s1 <= 5 : 1 + .001 * heat;
 [h]  clk < 100 : .001 * heat;
endrewards
label "finish" = clk <= 50 & s1 = 6 & s2 = 3 & s3 = 6 & s4 = 5 & s5 = 6;